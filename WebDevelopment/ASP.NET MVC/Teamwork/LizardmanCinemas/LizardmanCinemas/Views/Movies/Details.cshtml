@using Microsoft.AspNet.Identity
@model LizardmanCinemas.ViewModels.MovieFullDetails

@{
    var directorName = string.Format("{0} {1}", Model.Director.FirstName, Model.Director.LastName);

    var posterPath = "/Content/Posters/" + Model.Poster;
}

<div>
    <div class="movie-title">@Html.DisplayFor(model => model.Title)</div>

    <div class="movie-details"><img src=@posterPath alt="poster" style="width: 180px; height: 270px" /></div>

    @if (!string.IsNullOrEmpty(Model.Trailer))
    {
        <div class="movie-details">
            <iframe width="420" height="315" src="//www.youtube.com/embed/@Model.Trailer.Split('=')[1]" frameborder="0" allowfullscreen></iframe>
        </div>
    }

    <div class="movie-details">Director: @Html.ActionLink(directorName, "Details", "Directors", new { Area = "", id = Model.Director.Id }, null)</div>

    <div class="movie-details">
        Artists:
        <ul class="artists-list">
            @foreach (var actor in Model.Actors)
            {
                <li>
                    @Html.ActionLink((actor.FirstName + " " + actor.LastName), "Details", "Actors", new { Area = "", id = actor.Id }, null)
                </li>
            }
        </ul>
    </div>
    <div class="movie-details">Year: @Html.DisplayFor(model => model.Year)</div>
    <div class="movie-details">Duration: @Html.DisplayFor(model => model.Duration) minutes</div>
    <div class="movie-details">Country: @Html.DisplayFor(model => model.Country.Name)</div>
    <div class="movie-details">Category: @Html.ActionLink(@Model.Category.Name, "Details", "Categories", new { Area = "", id = Model.Category.Id }, null)</div>

    <div class="movie-details">
        Trailer:
        @if (String.IsNullOrEmpty(Model.Trailer))
        {
            @: not available
        }
        else
        {
            @Html.DisplayFor(model => model.Trailer)
        }
    </div>

    <div class="movie-details">
        Parent Guide:
        @if (Model.ParentsGuide == LizardmanCinemas.Models.ParentsGuide.Under12)
        {
            <img src="~/Content/ParentsGuide/PEGI_12.png" alt="Under 12" style="width: 40px; height:40px" />
        }
        else if (Model.ParentsGuide == LizardmanCinemas.Models.ParentsGuide.Under16)
        {
            <img src="~/Content/ParentsGuide/PEGI_16.png" alt="Under 16" style="width: 40px; height:40px" />
        }
        else if (Model.ParentsGuide == LizardmanCinemas.Models.ParentsGuide.Under18)
        {
            <img src="~/Content/ParentsGuide/PEGI_18.png" alt="Under 18" style="width: 40px; height:40px" />
        }
    </div>
    <p class="movie-details">
        Description:
        @Html.DisplayFor(model => model.Description)
    </p>

    <div id="votes">
        @Html.Partial("_VotesPartial", Model)
    </div>
</div>

<div>
    @if (User.Identity.IsAuthenticated)
    {
        if (!Model.Votes.Any(x => x.UserId == User.Identity.GetUserId() && x.MovieId == Model.Id))
        {
            using (Ajax.BeginForm("VoteUp", new { id = Model.Id },
                new AjaxOptions
                {
                    HttpMethod = "Post",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "votes",
                    OnSuccess = "hideVoteButtons"
                }, new { id = "vote-up-btn", style = "display: inline-block; margin-right: 10px;" }))
           {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <input type="submit" class="btn" value="Vote Up" />
            }

            using (Ajax.BeginForm("VoteDown", new { id = Model.Id },
                new AjaxOptions
                {
                    HttpMethod = "Post",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "votes",
                    OnSuccess = "hideVoteButtons"
                }, new { id = "vote-down-btn", style = "display: inline-block; margin-right: 10px;" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

                <input type="submit" class="btn" value="Vote Down" />
            }
        }
    }
    else
    {
        <p class="lead">Login to vote for this film</p>
    }
</div>

<div>
    <h4>Comments</h4>
    <hr />

    @if (Model.Comments.Count == 0)
    {
        <p>Be the first to comment this film</p>
    }
    else
    {
        <div id="movie-comments">
            @foreach (var comment in Model.Comments)
            {
                @Html.Partial("_CommentPartial", comment);
            }
        </div>
    }
</div>

<legend>Add Comments</legend>
@if (User.Identity.IsAuthenticated)
{
    using (Ajax.BeginForm("AddComment", 
        new AjaxOptions 
        { 
            HttpMethod = "Post", 
            InsertionMode = InsertionMode.InsertAfter, 
            UpdateTargetId = "movie-comments", 
            OnFailure = "commentPostFailure" 
        }))
    {
        @Html.Hidden("MovieId", Model.Id)
        @Html.TextArea("CommentText")
        @Html.AntiForgeryToken()
        <input type="submit" class="btn" value="Add" /> <span class="post-comment-error"></span>
    }
}
else
{
    <p class="lead">Login to add comments for this film</p>
}


<p>
    @Html.ActionLink("Back to Movies", "Index", null, new { @class = "btn" })
</p>
@section Scripts{
    <script>
        function commentPostFailure(e) {
            debugger;
            console.log(e);
            $("#post-comment-error").text("The comment field is required")
        }

        function hideVoteButtons() {
            $("#vote-up-btn").hide();
            $("#vote-down-btn").hide();
        }
    </script>
}