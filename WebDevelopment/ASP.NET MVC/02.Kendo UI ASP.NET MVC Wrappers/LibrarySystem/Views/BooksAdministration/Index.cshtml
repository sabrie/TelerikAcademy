@model LibrarySystem.Models.BookAdministrationViewModel
@{
    ViewBag.Title = "Edit Books";
}

@(Html.Kendo()
    .Grid<LibrarySystem.Models.BookAdministrationViewModel>()
    .Name("books")
    .Sortable()
    .Pageable()
    .Groupable()
    .Filterable()
    .Reorderable(order => order.Columns(true))
    .Editable(edit =>
        {
            edit.Enabled(true)
                .TemplateName("BookAdministrationViewModel")
                .Mode(GridEditMode.PopUp)
                .Window(w =>
                    {
                        w.AutoFocus(true)
                            .Animation(true)
                            .Actions(action =>
                                {
                                    action.Close();
                                });
                    })
                    .CreateAt(GridInsertRowPosition.Top)
                    .DisplayDeleteConfirmation("Are you sure you want to delete this book?");
        })
    .ToolBar(toolbar => toolbar.Create().Text("Add book"))
    .DataSource(ds =>
        {
            ds.Ajax()
                .Events(ev => ev.Error("handleError"))
                .PageSize(5)
                .Model(model =>
                    {
                        model.Id(b => b.Id);
                        model.Field(b => b.Category)
                            .DefaultValue(new LibrarySystem.Models.CategoryViewModel());
                    })
                .Read("All", "BooksAdministration")
                .Create("Create", "BooksAdministration")
                .Update("Update", "BooksAdministration")
                .Destroy("Delete", "BooksAdministration");
        })
        .Events(ev => ev.Edit("addOrUpdate"))
        .Columns(columns =>
            {
                columns.Bound(b => b.Title).Title("Title");
                columns.Bound(b => b.Author).Title("Author");
                columns.Bound(b => b.ISBN).Title("ISBN");
                columns.Bound(b => b.Website).Title("Website");
                columns.Bound(b => b.Category).ClientTemplate("#: data.Category.Name #").Title("Category");
                columns.Command(command =>
                    {
                        command.Edit()
                            .Text("Edit");
                        command.Destroy()
                            .Text("Delete");
                    })
                    .Title("Actions");
            }))

<script type="text/javascript">
    function handleError() {
        alert("An error occurred. Please try again.");
        this.cancelChanges();
    }

    function addOrUpdate(e) {
        if (!e.model.Id) {
            $(".k-window .k-window-title").text("Add book");
            $(".k-window .k-grid-update").html("<span class=\"k-icon k-update\"></span>Create");
        }
    }
</script>